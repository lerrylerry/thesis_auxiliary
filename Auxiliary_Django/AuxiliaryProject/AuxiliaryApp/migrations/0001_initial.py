# Generated by Django 4.1.3 on 2023-01-04 15:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='adminrepairDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fabricate', models.CharField(choices=[('YES', 'Can be Repaired/Fabricated in-house'), ('NO', "Can't be Repaired/Fabricated in-house")], max_length=100)),
                ('assess', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('assigned', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='borrowDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_req', models.JSONField(default=dict)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='PENDING', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='clientrepairDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('prop_type', models.CharField(blank=True, max_length=50, null=True)),
                ('brand', models.CharField(blank=True, max_length=50, null=True)),
                ('serial', models.CharField(blank=True, max_length=50, null=True)),
                ('prop_no', models.CharField(blank=True, max_length=50, null=True)),
                ('acq_date', models.DateField(max_length=10)),
                ('acq_cost', models.IntegerField(blank=True, null=True)),
                ('defect', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, default='PENDING', max_length=8)),
                ('email', models.EmailField(default=None, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='itemsDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=25, null=True)),
                ('item_unit', models.CharField(blank=True, max_length=25, null=True)),
                ('item_quantity', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='janitorDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_name', models.CharField(blank=True, max_length=25, null=True)),
                ('up_code', models.CharField(blank=True, max_length=4, null=True)),
                ('up_status', models.CharField(default='ACTIVE', max_length=100, verbose_name='userType')),
            ],
        ),
        migrations.CreateModel(
            name='mainterepairDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.CharField(blank=True, max_length=50, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('inspect', models.CharField(blank=True, max_length=50, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.adminrepairdb')),
            ],
        ),
        migrations.CreateModel(
            name='vehicleDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_name', models.CharField(blank=True, max_length=25, null=True)),
                ('passengers', models.IntegerField(blank=True, null=True)),
                ('destination', models.CharField(blank=True, max_length=25, null=True)),
                ('purpose', models.CharField(blank=True, max_length=25, null=True)),
                ('date', models.DateField(max_length=10)),
                ('email', models.EmailField(default=None, max_length=300)),
                ('status', models.CharField(default='PENDING', max_length=100, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userType', models.CharField(choices=[('ADMIN', 'ADMIN'), ('RERAIR_MAN', 'REPAIR_MAN'), ('ASSISTANT_DIRECTOR', 'ASSISTANT_DIRECTOR')], max_length=100, verbose_name='userType')),
                ('status', models.CharField(default='ACTIVE', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='suppmatDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('particulars', models.CharField(blank=True, max_length=50, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.clientrepairdb')),
            ],
        ),
        migrations.CreateModel(
            name='returnclientDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requisitioner', models.CharField(blank=True, max_length=50, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('mainte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.mainterepairdb')),
            ],
        ),
        migrations.CreateModel(
            name='historyDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('his_name', models.CharField(blank=True, max_length=50, null=True)),
                ('service', models.CharField(blank=True, max_length=50, null=True)),
                ('his_date', models.DateTimeField(auto_now_add=True)),
                ('his_status', models.CharField(blank=True, max_length=50, null=True)),
                ('borrow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.borrowdb')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.vehicledb')),
            ],
        ),
        migrations.AddField(
            model_name='borrowdb',
            name='utility_personnel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.janitordb'),
        ),
        migrations.CreateModel(
            name='approvalDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prove', models.CharField(choices=[('APPROVED', 'APPROVED'), ('DISAPPROVED', 'DISAPPROVED'), ('RESUBMIT REQUEST', 'RESUBMIT REQUEST')], max_length=100)),
                ('head', models.CharField(blank=True, max_length=50, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('optional', models.CharField(blank=True, max_length=50, null=True)),
                ('client', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.clientrepairdb')),
            ],
        ),
        migrations.AddField(
            model_name='adminrepairdb',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuxiliaryApp.clientrepairdb'),
        ),
    ]
